
                    Nyquest Technology Co., Ltd.

NYASM 2.42

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_send_ble_packet
                                    1-   15     	extern	_Check_Keydown
                                    1-   16     	extern	_set_PB_low
                                    1-   17     	extern	_set_PA_low
                                    1-   18     	extern	_key_init
                                    1-   19     	extern	_delay_40us
                                    1-   20     	extern	_delay_us
                                    1-   21     	extern	_delay_250ms
                                    1-   22     	extern	_delay_ms
                                    1-   23     	extern	_CS1630_Dump_RF_Register
                                    1-   24     	extern	_Enter_sleep
                                    1-   25     	extern	_CS1630_SendPack
                                    1-   26     	extern	_CS1630_wr_buffer
                                    1-   27     	extern	_CS1630_write_byte
                                    1-   28     	extern	_CS1630_read_byte
                                    1-   29     	extern	_CS1630_read_buffer
                                    1-   30     	extern	_CS1630_Bank_Switch
                                    1-   31     	extern	_CS1630_ModeSwitch
                                    1-   32     	extern	_CS1630_CE_Low
                                    1-   33     	extern	_CS1630_CE_High
                                    1-   34     	extern	_CS1630_Flush_Tx
                                    1-   35     	extern	_CS1630_Clear_All_Irq
                                    1-   36     	extern	_CS1630_Init
                                    1-   37     	extern	_CS1630_Soft_Rst
                                    1-   38     	extern	_SPI_ReadByte
                                    1-   39     	extern	_SPI_SendByte
                                    1-   40     	extern	_RF_softSPI_Init
                                    1-   41     	extern	_RF_Init
                                    1-   42     	extern	_RF_wr_cmd
                                    1-   43     	extern	_RF_write_byte
                                    1-   44     	extern	_RF_wr_buffer
                                    1-   45     	extern	_RF_Write_Ack_Payload
                                    1-   46     	extern	_RF_spi_wrd
                                    1-   47     	extern	_RF_Soft_Rst
                                    1-   48     	extern	_RF_SendPack
                                    1-   49     	extern	_RF_ReceivePack
                                    1-   50     	extern	_RF_Read_Status
                                    1-   51     	extern	_RF_read_byte
                                    1-   52     	extern	_RF_read_buffer
                                    1-   53     	extern	_RF_Operation
                                    1-   54     	extern	_RF_ModeSwitch
                                    1-   55     	extern	_RF_Get_RSSI
                                    1-   56     	extern	_RF_Get_Chip_ID
                                    1-   57     	extern	_RF_Flush_Tx
                                    1-   58     	extern	_RF_Flush_Rx
                                    1-   59     	extern	_RF_Configure_Reg
                                    1-   60     	extern	_RF_Clear_All_Irq
                                    1-   61     	extern	_RF_Change_Pwr
                                    1-   62     	extern	_RF_Change_CH
                                    1-   63     	extern	_RF_ChangeAddr_Reg
                                    1-   64     	extern	_RF_CE_Low
                                    1-   65     	extern	_RF_CE_High_Pulse
                                    1-   66     	extern	_RF_CE_High
                                    1-   67     	extern	_RF_Bank_Switch
                                    1-   68     	extern	_clear_ram
                                    1-   69     	extern	_multi_16b
                                    1-   70     	extern	_T0MD
                                    1-   71     	extern	_PCON1
                                    1-   72     	extern	_CMPCR
                                    1-   73     	extern	_BODCON
                                    1-   74     	extern	_PS0CV
                                    1-   75     	extern	_APHCON
                                    1-   76     	extern	_IOSTB
                                    1-   77     	extern	_IOSTA
                                    1-   78     	extern	_PWM5RH
                                    1-   79     	extern	_PWM5DUTY
                                    1-   80     	extern	_P5CR1
                                    1-   81     	extern	_PWM4DUTY
                                    1-   82     	extern	_P4CR1
                                    1-   83     	extern	_PS3CV
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_T3CR2
                                    1-   86     	extern	_T3CR1
                                    1-   87     	extern	_TMR3
                                    1-   88     	extern	_OSCCR
                                    1-   89     	extern	_PWM2DUTY
                                    1-   90     	extern	_P2CR1
                                    1-   91     	extern	_TBHD
                                    1-   92     	extern	_TBHP
                                    1-   93     	extern	_IRCR
                                    1-   94     	extern	_BZ1CR
                                    1-   95     	extern	_PS1CV
                                    1-   96     	extern	_PWM1DUTY
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_T1CR1
                                    1-   99     	extern	_TMR1
                                    1-  100     	extern	_TM34RH
                                    1-  101     	extern	_TMRH
                                    1-  102     	extern	_PCHBUF
                                    1-  103     	extern	_STATUS
                                    1-  104     	extern	_PCL
                                    1-  105     	extern	_TMR0
                                    1-  106     	extern	_SLEEP_STATUS
                                    1-  107     	extern	_INTE2bits
                                    1-  108     	extern	_RFCbits
                                    1-  109     	extern	_INTEDGbits
                                    1-  110     	extern	_AWUCONbits
                                    1-  111     	extern	_INTFbits
                                    1-  112     	extern	_INTEbits
                                    1-  113     	extern	_BPHCONbits
                                    1-  114     	extern	_ABPLCONbits
                                    1-  115     	extern	_BWUCONbits
                                    1-  116     	extern	_PCONbits
                                    1-  117     	extern	_PORTBbits
                                    1-  118     	extern	_PORTAbits
                                    1-  119     	extern	__nyc_ny8_startup
                                    1-  120     ;--------------------------------------------------------
                                    1-  121     ; global declarations
                                    1-  122     ;--------------------------------------------------------
                                    1-  123     	extern	_main
                                    1-  124     	extern	_wake_up_init
                                    1-  125     	extern	_isr
                                    1-  126     	extern	_INTE2
                                    1-  127     	extern	_RFC
                                    1-  128     	extern	_INTEDG
                                    1-  129     	extern	_AWUCON
                                    1-  130     	extern	_INTF
                                    1-  131     	extern	_INTE
                                    1-  132     	extern	_BPHCON
                                    1-  133     	extern	_ABPLCON
                                    1-  134     	extern	_BWUCON
                                    1-  135     	extern	_PCON
                                    1-  136     	extern	_PORTB
                                    1-  137     	extern	_PORTA
                                    1-  138     	extern	_g_timer0_delay_conut_2
                                    1-  139     	extern	_g_timer0_delay_conut_1
                                    1-  141     	extern PSAVE
                                    1-  142     	extern SSAVE
                                    1-  143     	extern WSAVE
                                    1-  144     	extern STK12
                                    1-  145     	extern ___STK12
                                    1-  146     	extern STK11
                                    1-  147     	extern ___STK11
                                    1-  148     	extern STK10
                                    1-  149     	extern ___STK10
                                    1-  150     	extern STK09
                                    1-  151     	extern ___STK09
                                    1-  152     	extern STK08
                                    1-  153     	extern ___STK08
                                    1-  154     	extern STK07
                                    1-  155     	extern ___STK07
                                    1-  156     	extern STK06
                                    1-  157     	extern ___STK06
                                    1-  158     	extern STK05
                                    1-  159     	extern ___STK05
                                    1-  160     	extern STK04
                                    1-  161     	extern ___STK04
                                    1-  162     	extern STK03
                                    1-  163     	extern ___STK03
                                    1-  164     	extern STK02
                                    1-  165     	extern ___STK02
                                    1-  166     	extern STK01
                                    1-  167     	extern ___STK01
                                    1-  168     	extern STK00
                                    1-  169     	extern ___STK00
                                    1-  171     .segment "share_bank"
     0000                           1-  172     PSAVE:
                                    1-  173     	.res 1
                                    1-  174     .segment "share_bank"
     0000                           1-  175     SSAVE:
                                    1-  176     	.res 1
                                    1-  177     .segment "share_bank"
     0000                           1-  178     WSAVE:
                                    1-  179     	.res 1
                                    1-  180     .segment "share_bank"
     0000                           1-  181     ___STK12:
     0000                           1-  182     STK12:
                                    1-  183     	.res 1
                                    1-  184     .segment "share_bank"
     0000                           1-  185     ___STK11:
     0000                           1-  186     STK11:
                                    1-  187     	.res 1
                                    1-  188     .segment "share_bank"
     0000                           1-  189     ___STK10:
     0000                           1-  190     STK10:
                                    1-  191     	.res 1
                                    1-  192     .segment "share_bank"
     0000                           1-  193     ___STK09:
     0000                           1-  194     STK09:
                                    1-  195     	.res 1
                                    1-  196     .segment "share_bank"
     0000                           1-  197     ___STK08:
     0000                           1-  198     STK08:
                                    1-  199     	.res 1
                                    1-  200     .segment "share_bank"
     0000                           1-  201     ___STK07:
     0000                           1-  202     STK07:
                                    1-  203     	.res 1
                                    1-  204     .segment "share_bank"
     0000                           1-  205     ___STK06:
     0000                           1-  206     STK06:
                                    1-  207     	.res 1
                                    1-  208     .segment "share_bank"
     0000                           1-  209     ___STK05:
     0000                           1-  210     STK05:
                                    1-  211     	.res 1
                                    1-  212     .segment "share_bank"
     0000                           1-  213     ___STK04:
     0000                           1-  214     STK04:
                                    1-  215     	.res 1
                                    1-  216     .segment "share_bank"
     0000                           1-  217     ___STK03:
     0000                           1-  218     STK03:
                                    1-  219     	.res 1
                                    1-  220     .segment "share_bank"
     0000                           1-  221     ___STK02:
     0000                           1-  222     STK02:
                                    1-  223     	.res 1
                                    1-  224     .segment "share_bank"
     0000                           1-  225     ___STK01:
     0000                           1-  226     STK01:
                                    1-  227     	.res 1
                                    1-  228     .segment "share_bank"
     0000                           1-  229     ___STK00:
     0000                           1-  230     STK00:
                                    1-  231     	.res 1
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; global definitions
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     ___sdcc_saved_fsr:
                                    1-  244     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     ___sdcc_saved_stk00:
                                    1-  248     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     ___sdcc_saved_stk01:
                                    1-  252     	.res	1
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     ; initialized data
                                    1-  256     ;--------------------------------------------------------
                                    1-  258     .segment "idata"
     0000                           1-  259     _g_timer0_delay_conut_1:
     0000 0000                      1-  262     	dw	0x00	; 0
                                    1-  265     .segment "idata"
     0000                           1-  266     _g_timer0_delay_conut_2:
     0000 0000                      1-  269     	dw	0x00	; 0
                                    1-  271     ;--------------------------------------------------------
                                    1-  272     ; initialized absolute data
                                    1-  273     ;--------------------------------------------------------
                                    1-  274     ;--------------------------------------------------------
                                    1-  275     ; overlayable items in internal ram 
                                    1-  276     ;--------------------------------------------------------
                                    1-  277     ;	udata_ovr
                                    1-  278     ;--------------------------------------------------------
                                    1-  279     ; reset vector 
                                    1-  280     ;--------------------------------------------------------
                                    1-  281     ORG	0x0000
     0000 3rrr                      1-  282     	LGOTO	__nyc_ny8_startup
                                    1-  283     ;--------------------------------------------------------
                                    1-  284     ; interrupt and initialization code
                                    1-  285     ;--------------------------------------------------------
                                    1-  286     ORG 0x0008
                                    1-  287     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  289     .segment "code"
     0000                           1-  290     __sdcc_interrupt:
                                    1-  291     ;***
                                    1-  292     ;  pBlock Stats: dbName = I
                                    1-  293     ;***
                                    1-  294     ;2 compiler assigned registers:
                                    1-  295     ;   STK00
                                    1-  296     ;   STK01
                                    1-  297     ;; Starting pCode block
     0000                           1-  298     _isr:
                                    1-  299     ; 0 exit points
                                    1-  300     	.line	15, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  301     	MOVAR	WSAVE
     0001 1503                      1-  302     	SWAPR	STATUS,W
     0002 0283                      1-  303     	CLRR	STATUS
     0003 00rr                      1-  304     	MOVAR	SSAVE
     0004 010A                      1-  305     	MOVR	PCHBUF,W
     0005 028A                      1-  306     	CLRR	PCHBUF
     0006 00rr                      1-  307     	MOVAR	PSAVE
     0007 0104                      1-  308     	MOVR	FSR,W
                                    1-  309     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  310     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  311     	MOVR	STK00,W
                                    1-  312     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  313     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  314     	MOVR	STK01,W
                                    1-  315     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  316     	MOVAR	___sdcc_saved_stk01
                                    1-  317     	.line	22, "main.c"; 	if(INTFbits.PABIF)
     0010 08rr                      1-  318     	BTRSS	_INTFbits,1
                                    1-  319     	MGOTO	_02007_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  320     	.line	24, "main.c"; 	INTFbits.PABIF = 0;					// 清除PABIF（PortB输入变化中断标志位）
     0012 21FD                      1-  321     	MOVIA	0xfd
     0013 00rr                      1-  322     	MOVAR	(_INTFbits + 0)
     0014                           1-  323     _02007_DS_:
                                    1-  324     	.line	26, "main.c"; 	}
                                    1-  325     	BANKSEL	___sdcc_saved_stk01
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 01rr                      1-  326     	MOVR	___sdcc_saved_stk01,W
     0016 00rr                      1-  327     	MOVAR	STK01
                                    1-  328     	BANKSEL	___sdcc_saved_stk00
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 01rr                      1-  329     	MOVR	___sdcc_saved_stk00,W
     0019 00rr                      1-  330     	MOVAR	STK00
                                    1-  331     	BANKSEL	___sdcc_saved_fsr
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1-  332     	MOVR	___sdcc_saved_fsr,W
     001C 0084                      1-  333     	MOVAR	FSR
     001D 01rr                      1-  334     	MOVR	PSAVE,W
     001E 008A                      1-  335     	MOVAR	PCHBUF
     001F 0283                      1-  336     	CLRR	STATUS
     0020 15rr                      1-  337     	SWAPR	SSAVE,W
     0021 0083                      1-  338     	MOVAR	STATUS
     0022 15rr                      1-  339     	SWAPR	WSAVE,F
     0023 15rr                      1-  340     	SWAPR	WSAVE,W
     0024                           1-  341     END_OF_INTERRUPT:
     0024 0011                      1-  342     	RETIE	
                                    1-  344     ;--------------------------------------------------------
                                    1-  345     ; code
                                    1-  346     ;--------------------------------------------------------
                                    1-  347     ; code_main	code
                                    1-  348     ;***
                                    1-  349     ;  pBlock Stats: dbName = M
                                    1-  350     ;***
                                    1-  351     ;has an exit
                                    1-  352     ;functions called:
                                    1-  353     ;   _key_init
                                    1-  354     ;   _CS1630_Init
                                    1-  355     ;   _CS1630_CE_Low
                                    1-  356     ;   _CS1630_ModeSwitch
                                    1-  357     ;   _CS1630_write_byte
                                    1-  358     ;   _CS1630_write_byte
                                    1-  359     ;   _CS1630_write_byte
                                    1-  360     ;   _Check_Keydown
                                    1-  361     ;   _wake_up_init
                                    1-  362     ;   _key_init
                                    1-  363     ;   _CS1630_Init
                                    1-  364     ;   _CS1630_CE_Low
                                    1-  365     ;   _CS1630_ModeSwitch
                                    1-  366     ;   _CS1630_write_byte
                                    1-  367     ;   _CS1630_write_byte
                                    1-  368     ;   _CS1630_write_byte
                                    1-  369     ;   _Check_Keydown
                                    1-  370     ;   _wake_up_init
                                    1-  371     ;1 compiler assigned register :
                                    1-  372     ;   STK00
                                    1-  373     ;; Starting pCode block
                                    1-  374     .segment "code"; module=main, function=_main
     0000                           1-  376     _main:
                                    1-  377     ; 2 exit points
                                    1-  378     	.line	42, "main.c"; 	DISI();
     0000 0013                      1-  379     	DISI
                                    1-  380     	.line	43, "main.c"; 	key_init();
                                    1-  381     	MCALL	_key_init
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  382     	.line	44, "main.c"; 	CS1630_Init(); // 初始化CS1630模块
                                    1-  383     	MCALL	_CS1630_Init
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  384     	.line	45, "main.c"; 	CS1630_CE_Low(); // 设置CE引脚为低电平，准备发送数据
                                    1-  385     	MCALL	_CS1630_CE_Low
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  386     	.line	46, "main.c"; 	CS1630_ModeSwitch(Rf_PTX_Mode); // 切换到发送模式
     0004 2101                      1-  387     	MOVIA	0x01
                                    1-  388     	MCALL	_CS1630_ModeSwitch
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  389     	.line	49, "main.c"; 	CS1630_write_byte(CS1630_BANK0_FEATURE, 0x04);
     0006 2104                      1-  390     	MOVIA	0x04
     0007 00rr                      1-  391     	MOVAR	STK00
     0008 211D                      1-  392     	MOVIA	0x1d
                                    1-  393     	MCALL	_CS1630_write_byte
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  394     	.line	50, "main.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0e);
     000A 210E                      1-  395     	MOVIA	0x0e
     000B 00rr                      1-  396     	MOVAR	STK00
     000C 2100                      1-  397     	MOVIA	0x00
                                    1-  398     	MCALL	_CS1630_write_byte
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  399     	.line	51, "main.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, 0x04); // 配置值
     000E 2104                      1-  400     	MOVIA	0x04
     000F 00rr                      1-  401     	MOVAR	STK00
     0010 211E                      1-  402     	MOVIA	0x1e
                                    1-  403     	MCALL	_CS1630_write_byte
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  404     	.line	52, "main.c"; 	ENI();
     0012 0004                      1-  405     	ENI
     0013                           1-  406     _02017_DS_:
                                    1-  407     	.line	57, "main.c"; 	sleep_status = Check_Keydown();
                                    1-  408     	MCALL	_Check_Keydown
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  409     	.line	76, "main.c"; 	wake_up_init();
                                    1-  410     	MCALL	_wake_up_init
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  411     	.line	77, "main.c"; 	UPDATE_REG(PORTA);
     0015 01rr                      1-  412     	MOVR	_PORTA,F
                                    1-  413     	.line	78, "main.c"; 	INTF = 0x00;
     0016 02rr                      1-  414     	CLRR	_INTF
                                    1-  415     	.line	79, "main.c"; 	SLEEP();
     0017 0001                      1-  416     	sleep
                                    1-  417     	.line	80, "main.c"; 	INTFbits.PABIF = 0;	// 清除PABIF（PortB输入变化中断标志位）
     0018 21FD                      1-  418     	MOVIA	0xfd
     0019 00rr                      1-  419     	MOVAR	(_INTFbits + 0)
                                    1-  420     	MGOTO	_02017_DS_
     001A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  421     	.line	83, "main.c"; 	}
                                    1-  422     	RETURN	
     001B 0010                      3-   39 m1      ret
                                    1-  423     ; exit point of _main
                                    1-  425     ;***
                                    1-  426     ;  pBlock Stats: dbName = C
                                    1-  427     ;***
                                    1-  428     ;has an exit
                                    1-  429     ;; Starting pCode block
                                    1-  430     .segment "code"; module=main, function=_wake_up_init
     0000                           1-  432     _wake_up_init:
                                    1-  433     ; 2 exit points
                                    1-  434     	.line	30, "main.c"; 	AWUCON = 0xfc;
     0000 21FC                      1-  435     	MOVIA	0xfc
     0001 00rr                      1-  436     	MOVAR	_AWUCON
                                    1-  437     	.line	31, "main.c"; 	BWUCON = 0x00;
     0002 02rr                      1-  438     	CLRR	_BWUCON
                                    1-  439     	.line	32, "main.c"; 	IOSTA = C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input | C_PA6_Input | C_PA7_Input;  // 配置PA2、3、4、5、6、7为输入
     0003 21FC                      1-  440     	MOVIA	0xfc
     0004 000r                      1-  441     	IOST	_IOSTA
                                    1-  442     	.line	33, "main.c"; 	APHCON = 0b00100011; // 设置2、3、4、6、7上拉
     0005 2123                      1-  443     	MOVIA	0x23
     0006 000r                      1-  444     	IOST	_APHCON
                                    1-  445     	.line	36, "main.c"; 	INTE = C_INT_PABKey;
     0007 2102                      1-  446     	MOVIA	0x02
     0008 00rr                      1-  447     	MOVAR	_INTE
                                    1-  448     	.line	37, "main.c"; 	INTF = 0x00;
     0009 02rr                      1-  449     	CLRR	_INTF
                                    1-  450     	.line	38, "main.c"; 	}
                                    1-  451     	RETURN	
     000A 0010                      3-   39 m1      ret
                                    1-  452     ; exit point of _wake_up_init
                                    1-  455     ;	code size estimation:
                                    1-  456     ;	   66+    6 =    72 instructions (  156 byte)
                                    1-  458     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
