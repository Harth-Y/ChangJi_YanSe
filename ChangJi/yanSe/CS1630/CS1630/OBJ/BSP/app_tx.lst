
                    Nyquest Technology Co., Ltd.

NYASM 2.42

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\app_tx.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay_40us
                                    1-   15     	extern	_delay_us
                                    1-   16     	extern	_delay_250ms
                                    1-   17     	extern	_delay_ms
                                    1-   18     	extern	_CS1630_Dump_RF_Register
                                    1-   19     	extern	_Enter_sleep
                                    1-   20     	extern	_CS1630_SendPack
                                    1-   21     	extern	_CS1630_wr_buffer
                                    1-   22     	extern	_CS1630_write_byte
                                    1-   23     	extern	_CS1630_read_byte
                                    1-   24     	extern	_CS1630_read_buffer
                                    1-   25     	extern	_CS1630_Bank_Switch
                                    1-   26     	extern	_CS1630_ModeSwitch
                                    1-   27     	extern	_CS1630_CE_Low
                                    1-   28     	extern	_CS1630_CE_High
                                    1-   29     	extern	_CS1630_Flush_Tx
                                    1-   30     	extern	_CS1630_Clear_All_Irq
                                    1-   31     	extern	_CS1630_Init
                                    1-   32     	extern	_CS1630_Soft_Rst
                                    1-   33     	extern	_SPI_ReadByte
                                    1-   34     	extern	_SPI_SendByte
                                    1-   35     	extern	_RF_softSPI_Init
                                    1-   36     	extern	_clear_ram
                                    1-   37     	extern	_multi_16b
                                    1-   38     	extern	_RF_Init
                                    1-   39     	extern	_RF_wr_cmd
                                    1-   40     	extern	_RF_write_byte
                                    1-   41     	extern	_RF_wr_buffer
                                    1-   42     	extern	_RF_Write_Ack_Payload
                                    1-   43     	extern	_RF_spi_wrd
                                    1-   44     	extern	_RF_Soft_Rst
                                    1-   45     	extern	_RF_SendPack
                                    1-   46     	extern	_RF_ReceivePack
                                    1-   47     	extern	_RF_Read_Status
                                    1-   48     	extern	_RF_read_byte
                                    1-   49     	extern	_RF_read_buffer
                                    1-   50     	extern	_RF_Operation
                                    1-   51     	extern	_RF_ModeSwitch
                                    1-   52     	extern	_RF_Get_RSSI
                                    1-   53     	extern	_RF_Get_Chip_ID
                                    1-   54     	extern	_RF_Flush_Tx
                                    1-   55     	extern	_RF_Flush_Rx
                                    1-   56     	extern	_RF_Configure_Reg
                                    1-   57     	extern	_RF_Clear_All_Irq
                                    1-   58     	extern	_RF_Change_Pwr
                                    1-   59     	extern	_RF_Change_CH
                                    1-   60     	extern	_RF_ChangeAddr_Reg
                                    1-   61     	extern	_RF_CE_Low
                                    1-   62     	extern	_RF_CE_High_Pulse
                                    1-   63     	extern	_RF_CE_High
                                    1-   64     	extern	_RF_Bank_Switch
                                    1-   65     	extern	_T0MD
                                    1-   66     	extern	_PCON1
                                    1-   67     	extern	_CMPCR
                                    1-   68     	extern	_BODCON
                                    1-   69     	extern	_PS0CV
                                    1-   70     	extern	_APHCON
                                    1-   71     	extern	_IOSTB
                                    1-   72     	extern	_IOSTA
                                    1-   73     	extern	_PWM5RH
                                    1-   74     	extern	_PWM5DUTY
                                    1-   75     	extern	_P5CR1
                                    1-   76     	extern	_PWM4DUTY
                                    1-   77     	extern	_P4CR1
                                    1-   78     	extern	_PS3CV
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_T3CR2
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_OSCCR
                                    1-   84     	extern	_PWM2DUTY
                                    1-   85     	extern	_P2CR1
                                    1-   86     	extern	_TBHD
                                    1-   87     	extern	_TBHP
                                    1-   88     	extern	_IRCR
                                    1-   89     	extern	_BZ1CR
                                    1-   90     	extern	_PS1CV
                                    1-   91     	extern	_PWM1DUTY
                                    1-   92     	extern	_T1CR2
                                    1-   93     	extern	_T1CR1
                                    1-   94     	extern	_TMR1
                                    1-   95     	extern	_TM34RH
                                    1-   96     	extern	_TMRH
                                    1-   97     	extern	_PCHBUF
                                    1-   98     	extern	_STATUS
                                    1-   99     	extern	_PCL
                                    1-  100     	extern	_TMR0
                                    1-  101     	extern	_INTE2bits
                                    1-  102     	extern	_RFCbits
                                    1-  103     	extern	_INTEDGbits
                                    1-  104     	extern	_AWUCONbits
                                    1-  105     	extern	_INTFbits
                                    1-  106     	extern	_INTEbits
                                    1-  107     	extern	_BPHCONbits
                                    1-  108     	extern	_ABPLCONbits
                                    1-  109     	extern	_BWUCONbits
                                    1-  110     	extern	_PCONbits
                                    1-  111     	extern	_PORTBbits
                                    1-  112     	extern	_PORTAbits
                                    1-  113     	extern	__gptrget1
                                    1-  115     	extern PSAVE
                                    1-  116     	extern SSAVE
                                    1-  117     	extern WSAVE
                                    1-  118     	extern STK12
                                    1-  119     	extern ___STK12
                                    1-  120     	extern STK11
                                    1-  121     	extern ___STK11
                                    1-  122     	extern STK10
                                    1-  123     	extern ___STK10
                                    1-  124     	extern STK09
                                    1-  125     	extern ___STK09
                                    1-  126     	extern STK08
                                    1-  127     	extern ___STK08
                                    1-  128     	extern STK07
                                    1-  129     	extern ___STK07
                                    1-  130     	extern STK06
                                    1-  131     	extern ___STK06
                                    1-  132     	extern STK05
                                    1-  133     	extern ___STK05
                                    1-  134     	extern STK04
                                    1-  135     	extern ___STK04
                                    1-  136     	extern STK03
                                    1-  137     	extern ___STK03
                                    1-  138     	extern STK02
                                    1-  139     	extern ___STK02
                                    1-  140     	extern STK01
                                    1-  141     	extern ___STK01
                                    1-  142     	extern STK00
                                    1-  143     	extern ___STK00
                                    1-  144     ;--------------------------------------------------------
                                    1-  145     ; global declarations
                                    1-  146     ;--------------------------------------------------------
                                    1-  147     	extern	_INTE2
                                    1-  148     	extern	_RFC
                                    1-  149     	extern	_INTEDG
                                    1-  150     	extern	_AWUCON
                                    1-  151     	extern	_INTF
                                    1-  152     	extern	_INTE
                                    1-  153     	extern	_BPHCON
                                    1-  154     	extern	_ABPLCON
                                    1-  155     	extern	_BWUCON
                                    1-  156     	extern	_PCON
                                    1-  157     	extern	_PORTB
                                    1-  158     	extern	_PORTA
                                    1-  159     	extern	_send_ble_packet
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ; global definitions
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; absolute symbol definitions
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; compiler-defined variables
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1021:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1022:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1023:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1024:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1025:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1026:
                                    1-  187     	.res	1
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     ; initialized data
                                    1-  190     ;--------------------------------------------------------
                                    1-  192     .segment "idata"
     0000                           1-  193     _CS1630_Tx_Payload:
     0000 0002                      1-  196     	dw	0x02	; 2
     0001 0001                      1-  197     	dw	0x01	; 1
     0002 0006                      1-  198     	dw	0x06	; 6
     0003 0010                      1-  199     	dw	0x10	; 16
     0004 00FF                      1-  200     	dw	0xff	; 255
     0005 0054                      1-  201     	dw	0x54	; 84	'T'
     0006 0045                      1-  202     	dw	0x45	; 69	'E'
     0007 0000                      1-  203     	dw	0x00	; 0
     0008 0000                      1-  204     	dw	0x00	; 0
     0009 00BF                      1-  205     	dw	0xbf	; 191
     000A 00AA                      1-  206     	dw	0xaa	; 170
     000B 00FF                      1-  207     	dw	0xff	; 255
     000C 00FF                      1-  208     	dw	0xff	; 255
     000D 00FF                      1-  209     	dw	0xff	; 255
     000E 00FF                      1-  210     	dw	0xff	; 255
     000F 00FF                      1-  211     	dw	0xff	; 255
     0010 00FF                      1-  212     	dw	0xff	; 255
     0011 00FF                      1-  213     	dw	0xff	; 255
     0012 00FF                      1-  214     	dw	0xff	; 255
     0013 00FF                      1-  215     	dw	0xff	; 255
     0014 0000 0000 0000 0000 0000  1-  216     	dw	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          0000 0000 0000 0000 0000 
          0000 0000                
                                    1-  219     .segment "idata"
     0000                           1-  220     _s_data_num:
     0000 0000                      1-  223     	dw	0x00	; 0
                                    1-  226     .segment "code"
     0000                           1-  227     _channel_index:
     0000 2002                      1-  228     	retia 0x02	; 2
     0001 201A                      1-  229     	retia 0x1a	; 26
     0002 2050                      1-  230     	retia 0x50	; 80	'P'
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; initialized absolute data
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ; overlayable items in internal ram 
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ;	udata_ovr
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; code
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; code_app_tx	code
                                    1-  242     ;***
                                    1-  243     ;  pBlock Stats: dbName = C
                                    1-  244     ;***
                                    1-  245     ;has an exit
                                    1-  246     ;functions called:
                                    1-  247     ;   _CS1630_Init
                                    1-  248     ;   _CS1630_CE_Low
                                    1-  249     ;   _CS1630_ModeSwitch
                                    1-  250     ;   _CS1630_write_byte
                                    1-  251     ;   _CS1630_write_byte
                                    1-  252     ;   _CS1630_write_byte
                                    1-  253     ;   _CS1630_CE_Low
                                    1-  254     ;   _CS1630_Flush_Tx
                                    1-  255     ;   _CS1630_Clear_All_Irq
                                    1-  256     ;   _CS1630_write_byte
                                    1-  257     ;   _delay_ms
                                    1-  258     ;   __gptrget1
                                    1-  259     ;   _CS1630_write_byte
                                    1-  260     ;   _CS1630_SendPack
                                    1-  261     ;   _CS1630_CE_High
                                    1-  262     ;   _delay_40us
                                    1-  263     ;   _CS1630_CE_Low
                                    1-  264     ;   _CS1630_read_byte
                                    1-  265     ;   _CS1630_write_byte
                                    1-  266     ;   _CS1630_write_byte
                                    1-  267     ;   _delay_ms
                                    1-  268     ;   _CS1630_Init
                                    1-  269     ;   _CS1630_CE_Low
                                    1-  270     ;   _CS1630_ModeSwitch
                                    1-  271     ;   _CS1630_write_byte
                                    1-  272     ;   _CS1630_write_byte
                                    1-  273     ;   _CS1630_write_byte
                                    1-  274     ;   _CS1630_CE_Low
                                    1-  275     ;   _CS1630_Flush_Tx
                                    1-  276     ;   _CS1630_Clear_All_Irq
                                    1-  277     ;   _CS1630_write_byte
                                    1-  278     ;   _delay_ms
                                    1-  279     ;   __gptrget1
                                    1-  280     ;   _CS1630_write_byte
                                    1-  281     ;   _CS1630_SendPack
                                    1-  282     ;   _CS1630_CE_High
                                    1-  283     ;   _delay_40us
                                    1-  284     ;   _CS1630_CE_Low
                                    1-  285     ;   _CS1630_read_byte
                                    1-  286     ;   _CS1630_write_byte
                                    1-  287     ;   _CS1630_write_byte
                                    1-  288     ;   _delay_ms
                                    1-  289     ;10 compiler assigned registers:
                                    1-  290     ;   r0x1021
                                    1-  291     ;   STK00
                                    1-  292     ;   r0x1022
                                    1-  293     ;   r0x1023
                                    1-  294     ;   r0x1024
                                    1-  295     ;   STK01
                                    1-  296     ;   r0x1025
                                    1-  297     ;   r0x1026
                                    1-  298     ;   STK03
                                    1-  299     ;   STK02
                                    1-  300     ;; Starting pCode block
                                    1-  301     .segment "code"; module=app_tx, function=_send_ble_packet
                                    1-  303     ;local variable name mapping:
     0000                           1-  309     _send_ble_packet:
                                    1-  310     ; 2 exit points
                                    1-  311     	.line	34, "BSP\app_tx.c"; 	void send_ble_packet(unsigned char code_value)
                                    1-  312     	BANKSEL	r0x1021
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  313     	MOVAR	r0x1021
                                    1-  314     	.line	41, "BSP\app_tx.c"; 	s_data_num++;
                                    1-  315     	BANKSEL	_s_data_num
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 05rr                      1-  316     	INCR	_s_data_num,F
                                    1-  317     	.line	42, "BSP\app_tx.c"; 	CS1630_Init(); // 初始化CS1630模块
                                    1-  318     	MCALL	_CS1630_Init
     0004 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  319     	.line	43, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 设置CE引脚为低电平，准备发送数据
                                    1-  320     	MCALL	_CS1630_CE_Low
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  321     	.line	44, "BSP\app_tx.c"; 	CS1630_ModeSwitch(Rf_PTX_Mode); // 切换到发送模式
     0006 2101                      1-  322     	MOVIA	0x01
                                    1-  323     	MCALL	_CS1630_ModeSwitch
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  324     	.line	46, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_FEATURE, 0x04);
     0008 2104                      1-  325     	MOVIA	0x04
     0009 00rr                      1-  326     	MOVAR	STK00
     000A 211D                      1-  327     	MOVIA	0x1d
                                    1-  328     	MCALL	_CS1630_write_byte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  329     	.line	47, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0e);
     000C 210E                      1-  330     	MOVIA	0x0e
     000D 00rr                      1-  331     	MOVAR	STK00
     000E 2100                      1-  332     	MOVIA	0x00
                                    1-  333     	MCALL	_CS1630_write_byte
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  334     	.line	48, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, 0x04); // 配置值
     0010 2104                      1-  335     	MOVIA	0x04
     0011 00rr                      1-  336     	MOVAR	STK00
     0012 211E                      1-  337     	MOVIA	0x1e
                                    1-  338     	MCALL	_CS1630_write_byte
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  339     	.line	50, "BSP\app_tx.c"; 	CS1630_Tx_Payload[7] = s_data_num; // 序号，用于区分不同数据包
                                    1-  340     	BANKSEL	_s_data_num
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 01rr                      1-  341     	MOVR	_s_data_num,W
                                    1-  342     	BANKSEL	_CS1630_Tx_Payload
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 00rr                      1-  343     	MOVAR	(_CS1630_Tx_Payload + 7)
                                    1-  344     	.line	51, "BSP\app_tx.c"; 	CS1630_Tx_Payload[8] = code_value; // 码值，用于指示功能
                                    1-  345     	BANKSEL	r0x1021
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 01rr                      1-  346     	MOVR	r0x1021,W
                                    1-  347     	BANKSEL	_CS1630_Tx_Payload
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1-  348     	MOVAR	(_CS1630_Tx_Payload + 8)
                                    1-  349     	.line	54, "BSP\app_tx.c"; 	CS1630_CE_Low();
                                    1-  350     	MCALL	_CS1630_CE_Low
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  351     	.line	55, "BSP\app_tx.c"; 	CS1630_Flush_Tx();
                                    1-  352     	MCALL	_CS1630_Flush_Tx
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  353     	.line	56, "BSP\app_tx.c"; 	CS1630_Clear_All_Irq();
                                    1-  354     	MCALL	_CS1630_Clear_All_Irq
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  355     	.line	58, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0e);
     001F 210E                      1-  356     	MOVIA	0x0e
     0020 00rr                      1-  357     	MOVAR	STK00
     0021 2100                      1-  358     	MOVIA	0x00
                                    1-  359     	MCALL	_CS1630_write_byte
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  360     	.line	59, "BSP\app_tx.c"; 	delay_ms(5);
     0023 2105                      1-  361     	MOVIA	0x05
                                    1-  362     	MCALL	_delay_ms
     0024 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  363     	.line	61, "BSP\app_tx.c"; 	for (k = 0; k < 3; k++)
                                    1-  364     	BANKSEL	r0x1021
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 02rr                      1-  365     	CLRR	r0x1021
     0027                           1-  366     _02026_DS_:
                                    1-  367     	.line	64, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  368     	BANKSEL	r0x1022
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 02rr                      1-  369     	CLRR	r0x1022
     0029                           1-  370     _02016_DS_:
                                    1-  371     	.line	66, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  372     	BANKSEL	r0x1022
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 01rr                      1-  373     	MOVR	r0x1022,W
     002B 25rr                      1-  374     	ADDIA	(_channel_index + 0)
                                    1-  375     	BANKSEL	r0x1023
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 00rr                      1-  376     	MOVAR	r0x1023
     002E 21rr                      1-  377     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     002F 2600                      1-  378     	ADCIA	0x00
                                    1-  379     	BANKSEL	r0x1024
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 00rr                      1-  380     	MOVAR	r0x1024
                                    1-  381     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1-  382     	MOVR	r0x1023,W
     0034 00rr                      1-  383     	MOVAR	STK01
                                    1-  384     	BANKSEL	r0x1024
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 01rr                      1-  385     	MOVR	r0x1024,W
     0037 00rr                      1-  386     	MOVAR	STK00
     0038 2180                      1-  387     	MOVIA	0x80
                                    1-  388     	MCALL	__gptrget1
     0039 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  389     	BANKSEL	r0x1025
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 00rr                      1-  390     	MOVAR	r0x1025
     003C 01rr                      1-  391     	MOVR	r0x1025,W
     003D 00rr                      1-  392     	MOVAR	STK00
     003E 2105                      1-  393     	MOVIA	0x05
                                    1-  394     	MCALL	_CS1630_write_byte
     003F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  395     	.line	67, "BSP\app_tx.c"; 	for(i = 0; i < 3; i++)
                                    1-  396     	BANKSEL	r0x1023
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 02rr                      1-  397     	CLRR	r0x1023
     0042                           1-  398     _02014_DS_:
                                    1-  399     	.line	69, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     0042 21rr                      1-  400     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  401     	BANKSEL	r0x1024
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1-  402     	MOVAR	r0x1024
                                    1-  403     	BANKSEL	r0x1025
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 02rr                      1-  404     	CLRR	r0x1025
                                    1-  405     	BANKSEL	r0x1026
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 02rr                      1-  406     	CLRR	r0x1026
     0049 2114                      1-  407     	MOVIA	0x14
     004A 00rr                      1-  408     	MOVAR	STK03
                                    1-  409     	BANKSEL	r0x1024
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1-  410     	MOVR	r0x1024,W
     004D 00rr                      1-  411     	MOVAR	STK02
                                    1-  412     	BANKSEL	r0x1025
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1-  413     	MOVR	r0x1025,W
     0050 00rr                      1-  414     	MOVAR	STK01
                                    1-  415     	BANKSEL	r0x1026
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 01rr                      1-  416     	MOVR	r0x1026,W
     0053 00rr                      1-  417     	MOVAR	STK00
     0054 21A0                      1-  418     	MOVIA	0xa0
                                    1-  419     	MCALL	_CS1630_SendPack
     0055 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  420     	.line	70, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  421     	MCALL	_CS1630_CE_High
     0056 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  422     	.line	71, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  423     	MCALL	_delay_40us
     0057 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  424     	.line	72, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  425     	MCALL	_CS1630_CE_Low
     0058 2rrr                      3-   65 m1      LCALL rom_address
     0059                           1-  426     _02009_DS_:
                                    1-  427     	.line	76, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     0059 2107                      1-  428     	MOVIA	0x07
                                    1-  429     	MCALL	_CS1630_read_byte
     005A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  430     	BANKSEL	r0x1024
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 00rr                      1-  431     	MOVAR	r0x1024
                                    1-  432     	.line	77, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     005D 0Err                      1-  433     	BTRSC	r0x1024,5
                                    1-  434     	MGOTO	_02005_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
     005F 0Arr                      1-  435     	BTRSS	r0x1024,4
                                    1-  436     	MGOTO	_02009_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
     0061                           1-  437     _02005_DS_:
                                    1-  438     	.line	79, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  439     	BANKSEL	r0x1024
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 01rr                      1-  440     	MOVR	r0x1024,W
     0063 00rr                      1-  441     	MOVAR	STK00
     0064 2107                      1-  442     	MOVIA	0x07
                                    1-  443     	MCALL	_CS1630_write_byte
     0065 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  444     	.line	67, "BSP\app_tx.c"; 	for(i = 0; i < 3; i++)
                                    1-  445     	BANKSEL	r0x1023
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 05rr                      1-  446     	INCR	r0x1023,F
                                    1-  447     ;;unsigned compare: left < lit(0x3=3), size=1
     0068 2103                      1-  448     	MOVIA	0x03
     0069 04rr                      1-  449     	SUBAR	r0x1023,W
     006A 0803                      1-  450     	BTRSS	STATUS,0
                                    1-  451     	MGOTO	_02014_DS_
     006B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  452     	.line	64, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  453     	BANKSEL	r0x1022
     006C rrrr                      3-  109 m1      .banksel ram_address
     006D 05rr                      1-  454     	INCR	r0x1022,F
                                    1-  455     ;;unsigned compare: left < lit(0x3=3), size=1
     006E 2103                      1-  456     	MOVIA	0x03
     006F 04rr                      1-  457     	SUBAR	r0x1022,W
     0070 0803                      1-  458     	BTRSS	STATUS,0
                                    1-  459     	MGOTO	_02016_DS_
     0071 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  460     	.line	61, "BSP\app_tx.c"; 	for (k = 0; k < 3; k++)
                                    1-  461     	BANKSEL	r0x1021
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 05rr                      1-  462     	INCR	r0x1021,F
                                    1-  463     ;;unsigned compare: left < lit(0x3=3), size=1
     0074 2103                      1-  464     	MOVIA	0x03
     0075 04rr                      1-  465     	SUBAR	r0x1021,W
     0076 0803                      1-  466     	BTRSS	STATUS,0
                                    1-  467     	MGOTO	_02026_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  468     	.line	87, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x00);
     0078 2100                      1-  469     	MOVIA	0x00
     0079 00rr                      1-  470     	MOVAR	STK00
     007A 2100                      1-  471     	MOVIA	0x00
                                    1-  472     	MCALL	_CS1630_write_byte
     007B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  473     	.line	88, "BSP\app_tx.c"; 	delay_ms(1);
     007C 2101                      1-  474     	MOVIA	0x01
                                    1-  475     	MCALL	_delay_ms
     007D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  476     	.line	90, "BSP\app_tx.c"; 	}
                                    1-  477     	RETURN	
     007E 0010                      3-   39 m1      ret
                                    1-  478     ; exit point of _send_ble_packet
                                    1-  481     ;	code size estimation:
                                    1-  482     ;	  101+   26 =   127 instructions (  306 byte)
                                    1-  484     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\app_tx.s
002 ny8a054e.inc
003 common.inc
004 BSP\app_tx.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
