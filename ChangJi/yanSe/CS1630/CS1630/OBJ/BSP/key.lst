
                    Nyquest Technology Co., Ltd.

NYASM 2.42

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\key.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_send_ble_packet
                                    1-   15     	extern	_delay_40us
                                    1-   16     	extern	_delay_us
                                    1-   17     	extern	_delay_250ms
                                    1-   18     	extern	_delay_ms
                                    1-   19     	extern	_clear_ram
                                    1-   20     	extern	_multi_16b
                                    1-   21     	extern	_T0MD
                                    1-   22     	extern	_PCON1
                                    1-   23     	extern	_CMPCR
                                    1-   24     	extern	_BODCON
                                    1-   25     	extern	_PS0CV
                                    1-   26     	extern	_APHCON
                                    1-   27     	extern	_IOSTB
                                    1-   28     	extern	_IOSTA
                                    1-   29     	extern	_PWM5RH
                                    1-   30     	extern	_PWM5DUTY
                                    1-   31     	extern	_P5CR1
                                    1-   32     	extern	_PWM4DUTY
                                    1-   33     	extern	_P4CR1
                                    1-   34     	extern	_PS3CV
                                    1-   35     	extern	_PWM3DUTY
                                    1-   36     	extern	_T3CR2
                                    1-   37     	extern	_T3CR1
                                    1-   38     	extern	_TMR3
                                    1-   39     	extern	_OSCCR
                                    1-   40     	extern	_PWM2DUTY
                                    1-   41     	extern	_P2CR1
                                    1-   42     	extern	_TBHD
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_IRCR
                                    1-   45     	extern	_BZ1CR
                                    1-   46     	extern	_PS1CV
                                    1-   47     	extern	_PWM1DUTY
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_T1CR1
                                    1-   50     	extern	_TMR1
                                    1-   51     	extern	_TM34RH
                                    1-   52     	extern	_TMRH
                                    1-   53     	extern	_PCHBUF
                                    1-   54     	extern	_STATUS
                                    1-   55     	extern	_PCL
                                    1-   56     	extern	_TMR0
                                    1-   57     	extern	_INTE2bits
                                    1-   58     	extern	_RFCbits
                                    1-   59     	extern	_INTEDGbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_INTFbits
                                    1-   62     	extern	_INTEbits
                                    1-   63     	extern	_BPHCONbits
                                    1-   64     	extern	_ABPLCONbits
                                    1-   65     	extern	_BWUCONbits
                                    1-   66     	extern	_PCONbits
                                    1-   67     	extern	_PORTBbits
                                    1-   68     	extern	_PORTAbits
                                    1-   70     	extern PSAVE
                                    1-   71     	extern SSAVE
                                    1-   72     	extern WSAVE
                                    1-   73     	extern STK12
                                    1-   74     	extern ___STK12
                                    1-   75     	extern STK11
                                    1-   76     	extern ___STK11
                                    1-   77     	extern STK10
                                    1-   78     	extern ___STK10
                                    1-   79     	extern STK09
                                    1-   80     	extern ___STK09
                                    1-   81     	extern STK08
                                    1-   82     	extern ___STK08
                                    1-   83     	extern STK07
                                    1-   84     	extern ___STK07
                                    1-   85     	extern STK06
                                    1-   86     	extern ___STK06
                                    1-   87     	extern STK05
                                    1-   88     	extern ___STK05
                                    1-   89     	extern STK04
                                    1-   90     	extern ___STK04
                                    1-   91     	extern STK03
                                    1-   92     	extern ___STK03
                                    1-   93     	extern STK02
                                    1-   94     	extern ___STK02
                                    1-   95     	extern STK01
                                    1-   96     	extern ___STK01
                                    1-   97     	extern STK00
                                    1-   98     	extern ___STK00
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_Check_Keydown
                                    1-  103     	extern	_key_init
                                    1-  104     	extern	_set_PB_low
                                    1-  105     	extern	_set_PA_low
                                    1-  106     	extern	_INTE2
                                    1-  107     	extern	_RFC
                                    1-  108     	extern	_INTEDG
                                    1-  109     	extern	_AWUCON
                                    1-  110     	extern	_INTF
                                    1-  111     	extern	_INTE
                                    1-  112     	extern	_BPHCON
                                    1-  113     	extern	_ABPLCON
                                    1-  114     	extern	_BWUCON
                                    1-  115     	extern	_PCON
                                    1-  116     	extern	_PORTB
                                    1-  117     	extern	_PORTA
                                    1-  118     	extern	_SLEEP_STATUS
                                    1-  120     ;--------------------------------------------------------
                                    1-  121     ; global definitions
                                    1-  122     ;--------------------------------------------------------
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ; absolute symbol definitions
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     ; compiler-defined variables
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     .segment "uninit"
     0000                           1-  130     r0x1001:
                                    1-  131     	.res	1
                                    1-  132     .segment "uninit"
     0000                           1-  133     r0x1002:
                                    1-  134     	.res	1
                                    1-  135     .segment "uninit"
     0000                           1-  136     r0x1003:
                                    1-  137     	.res	1
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     ; initialized data
                                    1-  140     ;--------------------------------------------------------
                                    1-  142     .segment "idata"
     0000                           1-  143     _SLEEP_STATUS:
     0000 0001                      1-  146     	dw	0x01	; 1
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ; initialized absolute data
                                    1-  150     ;--------------------------------------------------------
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ; overlayable items in internal ram 
                                    1-  153     ;--------------------------------------------------------
                                    1-  154     ;	udata_ovr
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ; code
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; code_key	code
                                    1-  159     ;***
                                    1-  160     ;  pBlock Stats: dbName = C
                                    1-  161     ;***
                                    1-  162     ;has an exit
                                    1-  163     ;functions called:
                                    1-  164     ;   _delay_ms
                                    1-  165     ;   _set_PB_low
                                    1-  166     ;   _set_PA_low
                                    1-  167     ;   _send_ble_packet
                                    1-  168     ;   _delay_ms
                                    1-  169     ;   _set_PB_low
                                    1-  170     ;   _set_PA_low
                                    1-  171     ;   _send_ble_packet
                                    1-  172     ;3 compiler assigned registers:
                                    1-  173     ;   r0x1001
                                    1-  174     ;   r0x1002
                                    1-  175     ;   r0x1003
                                    1-  176     ;; Starting pCode block
                                    1-  177     .segment "code"; module=key, function=_Check_Keydown
                                    1-  179     ;local variable name mapping:
     0000                           1-  183     _Check_Keydown:
                                    1-  184     ; 2 exit points
                                    1-  185     	.line	39, "BSP\key.c"; 	unsigned char KeyValue=0;
                                    1-  186     	BANKSEL	r0x1001
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1-  187     	CLRR	r0x1001
                                    1-  188     	.line	43, "BSP\key.c"; 	KeyStatus = PORTB;
     0002 01rr                      1-  189     	MOVR	_PORTB,W
                                    1-  190     	BANKSEL	r0x1002
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  191     	MOVAR	r0x1002
                                    1-  192     	.line	44, "BSP\key.c"; 	KeyStatus = KeyStatus & 0x0F;
     0005 210F                      1-  193     	MOVIA	0x0f
     0006 10rr                      1-  194     	ANDAR	r0x1002,F
                                    1-  195     	.line	45, "BSP\key.c"; 	if(KeyStatus != 0x0f)
     0007 01rr                      1-  196     	MOVR	r0x1002,W
     0008 240F                      1-  197     	XORIA	0x0f
     0009 0903                      1-  198     	BTRSS	STATUS,2
                                    1-  199     	MGOTO	_02102_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  200     	MGOTO	_02038_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
     000C                           1-  201     _02102_DS_:
                                    1-  202     	.line	47, "BSP\key.c"; 	delay_ms(10);
     000C 210A                      1-  203     	MOVIA	0x0a
                                    1-  204     	MCALL	_delay_ms
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  205     	.line	48, "BSP\key.c"; 	KeyStatus = PORTB;
     000E 01rr                      1-  206     	MOVR	_PORTB,W
                                    1-  207     	BANKSEL	r0x1002
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 00rr                      1-  208     	MOVAR	r0x1002
                                    1-  209     	.line	49, "BSP\key.c"; 	KeyStatus = KeyStatus & 0x0F;
     0011 210F                      1-  210     	MOVIA	0x0f
     0012 10rr                      1-  211     	ANDAR	r0x1002,F
                                    1-  212     	.line	50, "BSP\key.c"; 	if(KeyStatus != 0x0f)
     0013 01rr                      1-  213     	MOVR	r0x1002,W
     0014 240F                      1-  214     	XORIA	0x0f
     0015 0903                      1-  215     	BTRSS	STATUS,2
                                    1-  216     	MGOTO	_02103_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  217     	MGOTO	_02032_DS_
     0017 3rrr                      3-   62 m1      LGOTO rom_address
     0018                           1-  218     _02103_DS_:
                                    1-  219     	.line	52, "BSP\key.c"; 	SLEEP_STATUS = 0;
                                    1-  220     	BANKSEL	_SLEEP_STATUS
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 02rr                      1-  221     	CLRR	_SLEEP_STATUS
                                    1-  222     	.line	53, "BSP\key.c"; 	switch(KeyStatus)
                                    1-  223     	BANKSEL	r0x1002
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1-  224     	MOVR	r0x1002,W
     001C 2407                      1-  225     	XORIA	0x07
     001D 0903                      1-  226     	BTRSS	STATUS,2
                                    1-  227     	MGOTO	_02104_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  228     	MGOTO	_02020_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1-  229     _02104_DS_:
                                    1-  230     	BANKSEL	r0x1002
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1-  231     	MOVR	r0x1002,W
     0022 240B                      1-  232     	XORIA	0x0b
     0023 0903                      1-  233     	BTRSS	STATUS,2
                                    1-  234     	MGOTO	_02105_DS_
     0024 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  235     	MGOTO	_02019_DS_
     0025 3rrr                      3-   62 m1      LGOTO rom_address
     0026                           1-  236     _02105_DS_:
                                    1-  237     	BANKSEL	r0x1002
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 01rr                      1-  238     	MOVR	r0x1002,W
     0028 240D                      1-  239     	XORIA	0x0d
     0029 0903                      1-  240     	BTRSS	STATUS,2
                                    1-  241     	MGOTO	_02106_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  242     	MGOTO	_02018_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1-  243     _02106_DS_:
                                    1-  244     	BANKSEL	r0x1002
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1-  245     	MOVR	r0x1002,W
     002E 240E                      1-  246     	XORIA	0x0e
     002F 0903                      1-  247     	BTRSS	STATUS,2
                                    1-  248     	MGOTO	_02021_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  249     	.line	55, "BSP\key.c"; 	case(0X0e):	KeyValue=0x01;break;
     0031 2101                      1-  250     	MOVIA	0x01
                                    1-  251     	BANKSEL	r0x1001
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 00rr                      1-  252     	MOVAR	r0x1001
                                    1-  253     	MGOTO	_02021_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
     0035                           1-  254     _02018_DS_:
                                    1-  255     	.line	56, "BSP\key.c"; 	case(0X0d):	KeyValue=0x02;break;
     0035 2102                      1-  256     	MOVIA	0x02
                                    1-  257     	BANKSEL	r0x1001
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 00rr                      1-  258     	MOVAR	r0x1001
                                    1-  259     	MGOTO	_02021_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
     0039                           1-  260     _02019_DS_:
                                    1-  261     	.line	57, "BSP\key.c"; 	case(0X0b): KeyValue=0x03;break;
     0039 2103                      1-  262     	MOVIA	0x03
                                    1-  263     	BANKSEL	r0x1001
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 00rr                      1-  264     	MOVAR	r0x1001
                                    1-  265     	MGOTO	_02021_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
     003D                           1-  266     _02020_DS_:
                                    1-  267     	.line	58, "BSP\key.c"; 	case(0X07):	KeyValue=0x04;break;
     003D 2104                      1-  268     	MOVIA	0x04
                                    1-  269     	BANKSEL	r0x1001
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1-  270     	MOVAR	r0x1001
     0040                           1-  271     _02021_DS_:
                                    1-  272     	.line	60, "BSP\key.c"; 	BPHCON = 0x3F;
     0040 213F                      1-  273     	MOVIA	0x3f
     0041 00rr                      1-  274     	MOVAR	_BPHCON
                                    1-  275     	.line	61, "BSP\key.c"; 	IOSTB = C_PB0_Output | C_PB1_Output | C_PB2_Output | C_PB3_Output;
     0042 0200                      1-  276     	CLRA	
     0043 000r                      1-  277     	IOST	_IOSTB
                                    1-  278     	.line	62, "BSP\key.c"; 	set_PB_low();
                                    1-  279     	MCALL	_set_PB_low
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  280     	.line	63, "BSP\key.c"; 	IOSTA = C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;
     0045 213C                      1-  281     	MOVIA	0x3c
     0046 000r                      1-  282     	IOST	_IOSTA
                                    1-  283     	.line	64, "BSP\key.c"; 	APHCON = 0xc3;
     0047 21C3                      1-  284     	MOVIA	0xc3
     0048 000r                      1-  285     	IOST	_APHCON
                                    1-  286     	.line	65, "BSP\key.c"; 	KeyStatus = PORTA;
     0049 01rr                      1-  287     	MOVR	_PORTA,W
                                    1-  288     	BANKSEL	r0x1002
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 00rr                      1-  289     	MOVAR	r0x1002
                                    1-  290     	.line	66, "BSP\key.c"; 	KeyStatus = KeyStatus & 0x3C;
     004C 213C                      1-  291     	MOVIA	0x3c
     004D 10rr                      1-  292     	ANDAR	r0x1002,F
                                    1-  293     	.line	67, "BSP\key.c"; 	switch(KeyStatus)
     004E 01rr                      1-  294     	MOVR	r0x1002,W
     004F 241C                      1-  295     	XORIA	0x1c
     0050 0903                      1-  296     	BTRSS	STATUS,2
                                    1-  297     	MGOTO	_02107_DS_
     0051 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  298     	MGOTO	_02025_DS_
     0052 3rrr                      3-   62 m1      LGOTO rom_address
     0053                           1-  299     _02107_DS_:
                                    1-  300     	BANKSEL	r0x1002
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 01rr                      1-  301     	MOVR	r0x1002,W
     0055 242C                      1-  302     	XORIA	0x2c
     0056 0903                      1-  303     	BTRSS	STATUS,2
                                    1-  304     	MGOTO	_02108_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  305     	MGOTO	_02024_DS_
     0058 3rrr                      3-   62 m1      LGOTO rom_address
     0059                           1-  306     _02108_DS_:
                                    1-  307     	BANKSEL	r0x1002
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1-  308     	MOVR	r0x1002,W
     005B 2434                      1-  309     	XORIA	0x34
     005C 0903                      1-  310     	BTRSS	STATUS,2
                                    1-  311     	MGOTO	_02026_DS_
     005D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  312     	.line	70, "BSP\key.c"; 	case(0X34):	KeyValue=KeyValue+0x04;break;
     005E 2104                      1-  313     	MOVIA	0x04
                                    1-  314     	BANKSEL	r0x1001
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 03rr                      1-  315     	ADDAR	r0x1001,F
                                    1-  316     	MGOTO	_02026_DS_
     0061 3rrr                      3-   62 m1      LGOTO rom_address
     0062                           1-  317     _02024_DS_:
                                    1-  318     	.line	71, "BSP\key.c"; 	case(0X2C): KeyValue=KeyValue+0x08;break;
     0062 2108                      1-  319     	MOVIA	0x08
                                    1-  320     	BANKSEL	r0x1001
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 03rr                      1-  321     	ADDAR	r0x1001,F
                                    1-  322     	MGOTO	_02026_DS_
     0065 3rrr                      3-   62 m1      LGOTO rom_address
     0066                           1-  323     _02025_DS_:
                                    1-  324     	.line	72, "BSP\key.c"; 	case(0X1C):	KeyValue=KeyValue+0x0c;break;
     0066 210C                      1-  325     	MOVIA	0x0c
                                    1-  326     	BANKSEL	r0x1001
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 03rr                      1-  327     	ADDAR	r0x1001,F
     0069                           1-  328     _02026_DS_:
                                    1-  329     	.line	76, "BSP\key.c"; 	if(PORTAbits.PA6)
     0069 0Brr                      1-  330     	BTRSS	_PORTAbits,6
                                    1-  331     	MGOTO	_02028_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  332     	.line	78, "BSP\key.c"; 	KeyValue = 0x11;
     006B 2111                      1-  333     	MOVIA	0x11
                                    1-  334     	BANKSEL	r0x1001
     006C rrrr                      3-  109 m1      .banksel ram_address
     006D 00rr                      1-  335     	MOVAR	r0x1001
     006E                           1-  336     _02028_DS_:
                                    1-  337     	.line	80, "BSP\key.c"; 	if(PORTAbits.PA7)
     006E 0Brr                      1-  338     	BTRSS	_PORTAbits,7
                                    1-  339     	MGOTO	_02033_DS_
     006F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  340     	.line	82, "BSP\key.c"; 	KeyValue = 0x12;
     0070 2112                      1-  341     	MOVIA	0x12
                                    1-  342     	BANKSEL	r0x1001
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 00rr                      1-  343     	MOVAR	r0x1001
                                    1-  344     	MGOTO	_02033_DS_
     0073 3rrr                      3-   62 m1      LGOTO rom_address
     0074                           1-  345     _02032_DS_:
                                    1-  346     	.line	87, "BSP\key.c"; 	return 0;
     0074 2100                      1-  347     	MOVIA	0x00
                                    1-  348     	MGOTO	_02039_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
     0076                           1-  349     _02033_DS_:
                                    1-  350     	.line	89, "BSP\key.c"; 	APHCON = 0xff;
     0076 21FF                      1-  351     	MOVIA	0xff
     0077 000r                      1-  352     	IOST	_APHCON
                                    1-  353     	.line	90, "BSP\key.c"; 	IOSTA = C_PA2_Output | C_PA3_Output | C_PA4_Output | C_PA5_Output;
     0078 0200                      1-  354     	CLRA	
     0079 000r                      1-  355     	IOST	_IOSTA
                                    1-  356     	.line	91, "BSP\key.c"; 	set_PA_low();
                                    1-  357     	MCALL	_set_PA_low
     007A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  358     	.line	92, "BSP\key.c"; 	IOSTB = C_PB0_Input | C_PB1_Input | C_PB2_Input | C_PB3_Input;
     007B 210F                      1-  359     	MOVIA	0x0f
     007C 000r                      1-  360     	IOST	_IOSTB
                                    1-  361     	.line	93, "BSP\key.c"; 	BPHCON = 0x30;
     007D 2130                      1-  362     	MOVIA	0x30
     007E 00rr                      1-  363     	MOVAR	_BPHCON
                                    1-  364     	.line	94, "BSP\key.c"; 	sCodeValue = KeyValue - 0x01;
                                    1-  365     	BANKSEL	r0x1001
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 06rr                      1-  366     	DECR	r0x1001,W
                                    1-  367     	BANKSEL	r0x1002
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1-  368     	MOVAR	r0x1002
                                    1-  369     	.line	97, "BSP\key.c"; 	KeyStatus = PORTB;
     0083 01rr                      1-  370     	MOVR	_PORTB,W
                                    1-  371     	BANKSEL	r0x1003
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 00rr                      1-  372     	MOVAR	r0x1003
                                    1-  373     	.line	98, "BSP\key.c"; 	KeyStatus = KeyStatus & 0x0F;
     0086 210F                      1-  374     	MOVIA	0x0f
     0087 10rr                      1-  375     	ANDAR	r0x1003,F
                                    1-  376     	.line	99, "BSP\key.c"; 	while(KeyStatus != 0x0F)     // 等待按键释放
     0088 01rr                      1-  377     	MOVR	r0x1003,W
     0089 240F                      1-  378     	XORIA	0x0f
     008A 0903                      1-  379     	BTRSS	STATUS,2
                                    1-  380     	MGOTO	_02109_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  381     	MGOTO	_02038_DS_
     008C 3rrr                      3-   62 m1      LGOTO rom_address
     008D                           1-  382     _02109_DS_:
                                    1-  383     	.line	104, "BSP\key.c"; 	send_ble_packet(sCodeValue);
                                    1-  384     	BANKSEL	r0x1002
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 01rr                      1-  385     	MOVR	r0x1002,W
                                    1-  386     	MCALL	_send_ble_packet
     008F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  387     	.line	105, "BSP\key.c"; 	SLEEP_STATUS = 1;
     0090 2101                      1-  388     	MOVIA	0x01
                                    1-  389     	BANKSEL	_SLEEP_STATUS
     0091 rrrr                      3-  109 m1      .banksel ram_address
     0092 00rr                      1-  390     	MOVAR	_SLEEP_STATUS
                                    1-  391     	.line	106, "BSP\key.c"; 	return KeyValue;
                                    1-  392     	BANKSEL	r0x1001
     0093 rrrr                      3-  109 m1      .banksel ram_address
     0094 01rr                      1-  393     	MOVR	r0x1001,W
                                    1-  394     	MGOTO	_02039_DS_
     0095 3rrr                      3-   62 m1      LGOTO rom_address
     0096                           1-  395     _02038_DS_:
                                    1-  396     	.line	109, "BSP\key.c"; 	return 0;
     0096 2100                      1-  397     	MOVIA	0x00
     0097                           1-  398     _02039_DS_:
                                    1-  399     	.line	110, "BSP\key.c"; 	}
                                    1-  400     	RETURN	
     0097 0010                      3-   39 m1      ret
                                    1-  401     ; exit point of _Check_Keydown
                                    1-  403     ;***
                                    1-  404     ;  pBlock Stats: dbName = C
                                    1-  405     ;***
                                    1-  406     ;has an exit
                                    1-  407     ;functions called:
                                    1-  408     ;   _set_PA_low
                                    1-  409     ;   _set_PA_low
                                    1-  410     ;; Starting pCode block
                                    1-  411     .segment "code"; module=key, function=_key_init
     0000                           1-  413     _key_init:
                                    1-  414     ; 2 exit points
                                    1-  415     	.line	26, "BSP\key.c"; 	IOSTA = C_PA2_Output | C_PA3_Output | C_PA4_Output | C_PA5_Output | C_PA6_Input | C_PA7_Input;
     0000 21C0                      1-  416     	MOVIA	0xc0
     0001 000r                      1-  417     	IOST	_IOSTA
                                    1-  418     	.line	27, "BSP\key.c"; 	set_PA_low();
                                    1-  419     	MCALL	_set_PA_low
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  420     	.line	30, "BSP\key.c"; 	IOSTB = C_PB0_Input | C_PB1_Input | C_PB2_Input | C_PB3_Input | C_PB4_Output;
     0003 210F                      1-  421     	MOVIA	0x0f
     0004 000r                      1-  422     	IOST	_IOSTB
                                    1-  423     	.line	31, "BSP\key.c"; 	BPHCON = 0x30;
     0005 2130                      1-  424     	MOVIA	0x30
     0006 00rr                      1-  425     	MOVAR	_BPHCON
                                    1-  426     	.line	33, "BSP\key.c"; 	PORTBbits.PB4 = 0;
     0007 1Err                      1-  427     	BCR	_PORTBbits,4
                                    1-  428     	.line	35, "BSP\key.c"; 	}
                                    1-  429     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1-  430     ; exit point of _key_init
                                    1-  432     ;***
                                    1-  433     ;  pBlock Stats: dbName = C
                                    1-  434     ;***
                                    1-  435     ;has an exit
                                    1-  436     ;; Starting pCode block
                                    1-  437     .segment "code"; module=key, function=_set_PB_low
     0000                           1-  439     _set_PB_low:
                                    1-  440     ; 2 exit points
                                    1-  441     	.line	17, "BSP\key.c"; 	PORTBbits.PB0 = 0;
     0000 1Crr                      1-  442     	BCR	_PORTBbits,0
                                    1-  443     	.line	18, "BSP\key.c"; 	PORTBbits.PB1 = 0;
     0001 1Crr                      1-  444     	BCR	_PORTBbits,1
                                    1-  445     	.line	19, "BSP\key.c"; 	PORTBbits.PB2 = 0;
     0002 1Drr                      1-  446     	BCR	_PORTBbits,2
                                    1-  447     	.line	20, "BSP\key.c"; 	PORTBbits.PB3 = 0;
     0003 1Drr                      1-  448     	BCR	_PORTBbits,3
                                    1-  449     	.line	21, "BSP\key.c"; 	}
                                    1-  450     	RETURN	
     0004 0010                      3-   39 m1      ret
                                    1-  451     ; exit point of _set_PB_low
                                    1-  453     ;***
                                    1-  454     ;  pBlock Stats: dbName = C
                                    1-  455     ;***
                                    1-  456     ;has an exit
                                    1-  457     ;; Starting pCode block
                                    1-  458     .segment "code"; module=key, function=_set_PA_low
     0000                           1-  460     _set_PA_low:
                                    1-  461     ; 2 exit points
                                    1-  462     	.line	10, "BSP\key.c"; 	PORTAbits.PA2 = 0;
     0000 1Drr                      1-  463     	BCR	_PORTAbits,2
                                    1-  464     	.line	11, "BSP\key.c"; 	PORTAbits.PA3 = 0;
     0001 1Drr                      1-  465     	BCR	_PORTAbits,3
                                    1-  466     	.line	12, "BSP\key.c"; 	PORTAbits.PA4 = 0;
     0002 1Err                      1-  467     	BCR	_PORTAbits,4
                                    1-  468     	.line	13, "BSP\key.c"; 	PORTAbits.PA5 = 0;
     0003 1Err                      1-  469     	BCR	_PORTAbits,5
                                    1-  470     	.line	14, "BSP\key.c"; 	}
                                    1-  471     	RETURN	
     0004 0010                      3-   39 m1      ret
                                    1-  472     ; exit point of _set_PA_low
                                    1-  475     ;	code size estimation:
                                    1-  476     ;	  145+   26 =   171 instructions (  394 byte)
                                    1-  478     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\key.s
002 ny8a054e.inc
003 common.inc
004 BSP\key.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
