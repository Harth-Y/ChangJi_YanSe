
                    Nyquest Technology Co., Ltd.

NYASM 2.42

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\key.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_send_ble_packet
                                    1-   15     	extern	_delay_40us
                                    1-   16     	extern	_delay_us
                                    1-   17     	extern	_delay_250ms
                                    1-   18     	extern	_delay_ms
                                    1-   19     	extern	_clear_ram
                                    1-   20     	extern	_multi_16b
                                    1-   21     	extern	_T0MD
                                    1-   22     	extern	_PCON1
                                    1-   23     	extern	_CMPCR
                                    1-   24     	extern	_BODCON
                                    1-   25     	extern	_PS0CV
                                    1-   26     	extern	_APHCON
                                    1-   27     	extern	_IOSTB
                                    1-   28     	extern	_IOSTA
                                    1-   29     	extern	_PWM5RH
                                    1-   30     	extern	_PWM5DUTY
                                    1-   31     	extern	_P5CR1
                                    1-   32     	extern	_PWM4DUTY
                                    1-   33     	extern	_P4CR1
                                    1-   34     	extern	_PS3CV
                                    1-   35     	extern	_PWM3DUTY
                                    1-   36     	extern	_T3CR2
                                    1-   37     	extern	_T3CR1
                                    1-   38     	extern	_TMR3
                                    1-   39     	extern	_OSCCR
                                    1-   40     	extern	_PWM2DUTY
                                    1-   41     	extern	_P2CR1
                                    1-   42     	extern	_TBHD
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_IRCR
                                    1-   45     	extern	_BZ1CR
                                    1-   46     	extern	_PS1CV
                                    1-   47     	extern	_PWM1DUTY
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_T1CR1
                                    1-   50     	extern	_TMR1
                                    1-   51     	extern	_TM34RH
                                    1-   52     	extern	_TMRH
                                    1-   53     	extern	_PCHBUF
                                    1-   54     	extern	_STATUS
                                    1-   55     	extern	_PCL
                                    1-   56     	extern	_TMR0
                                    1-   57     	extern	_INTE2bits
                                    1-   58     	extern	_RFCbits
                                    1-   59     	extern	_INTEDGbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_INTFbits
                                    1-   62     	extern	_INTEbits
                                    1-   63     	extern	_BPHCONbits
                                    1-   64     	extern	_ABPLCONbits
                                    1-   65     	extern	_BWUCONbits
                                    1-   66     	extern	_PCONbits
                                    1-   67     	extern	_PORTBbits
                                    1-   68     	extern	_PORTAbits
                                    1-   70     	extern PSAVE
                                    1-   71     	extern SSAVE
                                    1-   72     	extern WSAVE
                                    1-   73     	extern STK12
                                    1-   74     	extern ___STK12
                                    1-   75     	extern STK11
                                    1-   76     	extern ___STK11
                                    1-   77     	extern STK10
                                    1-   78     	extern ___STK10
                                    1-   79     	extern STK09
                                    1-   80     	extern ___STK09
                                    1-   81     	extern STK08
                                    1-   82     	extern ___STK08
                                    1-   83     	extern STK07
                                    1-   84     	extern ___STK07
                                    1-   85     	extern STK06
                                    1-   86     	extern ___STK06
                                    1-   87     	extern STK05
                                    1-   88     	extern ___STK05
                                    1-   89     	extern STK04
                                    1-   90     	extern ___STK04
                                    1-   91     	extern STK03
                                    1-   92     	extern ___STK03
                                    1-   93     	extern STK02
                                    1-   94     	extern ___STK02
                                    1-   95     	extern STK01
                                    1-   96     	extern ___STK01
                                    1-   97     	extern STK00
                                    1-   98     	extern ___STK00
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_Check_Keydown
                                    1-  103     	extern	_led
                                    1-  104     	extern	_led_open
                                    1-  105     	extern	_key_init
                                    1-  106     	extern	_set_PB_low
                                    1-  107     	extern	_set_PA_low
                                    1-  108     	extern	_INTE2
                                    1-  109     	extern	_RFC
                                    1-  110     	extern	_INTEDG
                                    1-  111     	extern	_AWUCON
                                    1-  112     	extern	_INTF
                                    1-  113     	extern	_INTE
                                    1-  114     	extern	_BPHCON
                                    1-  115     	extern	_ABPLCON
                                    1-  116     	extern	_BWUCON
                                    1-  117     	extern	_PCON
                                    1-  118     	extern	_PORTB
                                    1-  119     	extern	_PORTA
                                    1-  121     ;--------------------------------------------------------
                                    1-  122     ; global definitions
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ;--------------------------------------------------------
                                    1-  125     ; absolute symbol definitions
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ; compiler-defined variables
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     .segment "uninit"
     0000                           1-  131     r0x1000:
                                    1-  132     	.res	1
                                    1-  133     .segment "uninit"
     0000                           1-  134     r0x1001:
                                    1-  135     	.res	1
                                    1-  136     .segment "uninit"
     0000                           1-  137     r0x1002:
                                    1-  138     	.res	1
                                    1-  139     .segment "uninit"
     0000                           1-  140     r0x1003:
                                    1-  141     	.res	1
                                    1-  142     ;--------------------------------------------------------
                                    1-  143     ; initialized data
                                    1-  144     ;--------------------------------------------------------
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     ; initialized absolute data
                                    1-  147     ;--------------------------------------------------------
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ; overlayable items in internal ram 
                                    1-  150     ;--------------------------------------------------------
                                    1-  151     ;	udata_ovr
                                    1-  152     ;--------------------------------------------------------
                                    1-  153     ; code
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     ; code_key	code
                                    1-  156     ;***
                                    1-  157     ;  pBlock Stats: dbName = C
                                    1-  158     ;***
                                    1-  159     ;has an exit
                                    1-  160     ;functions called:
                                    1-  161     ;   _key_init
                                    1-  162     ;   _set_PA_low
                                    1-  163     ;   _key_init
                                    1-  164     ;   _send_ble_packet
                                    1-  165     ;   _led
                                    1-  166     ;   _key_init
                                    1-  167     ;   _key_init
                                    1-  168     ;   _set_PA_low
                                    1-  169     ;   _key_init
                                    1-  170     ;   _send_ble_packet
                                    1-  171     ;   _led
                                    1-  172     ;   _key_init
                                    1-  173     ;3 compiler assigned registers:
                                    1-  174     ;   r0x1001
                                    1-  175     ;   r0x1002
                                    1-  176     ;   r0x1003
                                    1-  177     ;; Starting pCode block
                                    1-  178     .segment "code"; module=key, function=_Check_Keydown
                                    1-  180     ;local variable name mapping:
     0000                           1-  184     _Check_Keydown:
                                    1-  185     ; 2 exit points
                                    1-  186     	.line	63, "BSP\key.c"; 	key_init();
                                    1-  187     	MCALL	_key_init
     0000 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  188     	.line	64, "BSP\key.c"; 	unsigned char KeyValue=0;
                                    1-  189     	BANKSEL	r0x1001
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 02rr                      1-  190     	CLRR	r0x1001
                                    1-  191     	.line	69, "BSP\key.c"; 	KeyStatus = PORTA;
     0003 01rr                      1-  192     	MOVR	_PORTA,W
                                    1-  193     	BANKSEL	r0x1002
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1-  194     	MOVAR	r0x1002
                                    1-  195     	.line	70, "BSP\key.c"; 	KeyStatus = KeyStatus & 0xfc; // 0xfc 0x7c
     0006 21FC                      1-  196     	MOVIA	0xfc
     0007 10rr                      1-  197     	ANDAR	r0x1002,F
                                    1-  198     	.line	72, "BSP\key.c"; 	if(KeyStatus != 0xfc) // 0xfc 0x7c
     0008 01rr                      1-  199     	MOVR	r0x1002,W
     0009 24FC                      1-  200     	XORIA	0xfc
     000A 0903                      1-  201     	BTRSS	STATUS,2
                                    1-  202     	MGOTO	_02137_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  203     	MGOTO	_02059_DS_
     000C 3rrr                      3-   62 m1      LGOTO rom_address
     000D                           1-  204     _02137_DS_:
                                    1-  205     	.line	75, "BSP\key.c"; 	KeyStatus = PORTA;
     000D 01rr                      1-  206     	MOVR	_PORTA,W
                                    1-  207     	BANKSEL	r0x1002
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  208     	MOVAR	r0x1002
                                    1-  209     	.line	76, "BSP\key.c"; 	KeyStatus = KeyStatus & 0xfc;
     0010 21FC                      1-  210     	MOVIA	0xfc
     0011 10rr                      1-  211     	ANDAR	r0x1002,F
                                    1-  212     	.line	78, "BSP\key.c"; 	if(KeyStatus != 0xfc)
     0012 01rr                      1-  213     	MOVR	r0x1002,W
     0013 24FC                      1-  214     	XORIA	0xfc
     0014 0903                      1-  215     	BTRSS	STATUS,2
                                    1-  216     	MGOTO	_02138_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  217     	MGOTO	_02056_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1-  218     _02138_DS_:
                                    1-  219     	.line	80, "BSP\key.c"; 	if(!PORTAbits.PA6)
     0017 0Frr                      1-  220     	BTRSC	_PORTAbits,6
                                    1-  221     	MGOTO	_02031_DS_
     0018 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  222     	.line	82, "BSP\key.c"; 	KeyValue=0x11;
     0019 2111                      1-  223     	MOVIA	0x11
                                    1-  224     	BANKSEL	r0x1001
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1-  225     	MOVAR	r0x1001
     001C                           1-  226     _02031_DS_:
                                    1-  227     	.line	84, "BSP\key.c"; 	if(!PORTAbits.PA7)
     001C 0Frr                      1-  228     	BTRSC	_PORTAbits,7
                                    1-  229     	MGOTO	_02033_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  230     	.line	86, "BSP\key.c"; 	KeyValue=0x12;
     001E 2112                      1-  231     	MOVIA	0x12
                                    1-  232     	BANKSEL	r0x1001
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1-  233     	MOVAR	r0x1001
     0021                           1-  234     _02033_DS_:
                                    1-  235     	.line	89, "BSP\key.c"; 	KeyStatus = KeyStatus & 0x3c;
     0021 213C                      1-  236     	MOVIA	0x3c
                                    1-  237     	BANKSEL	r0x1002
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 10rr                      1-  238     	ANDAR	r0x1002,F
                                    1-  239     	.line	91, "BSP\key.c"; 	switch(KeyStatus)
     0024 01rr                      1-  240     	MOVR	r0x1002,W
     0025 241C                      1-  241     	XORIA	0x1c
     0026 0903                      1-  242     	BTRSS	STATUS,2
                                    1-  243     	MGOTO	_02139_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  244     	MGOTO	_02037_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
     0029                           1-  245     _02139_DS_:
                                    1-  246     	BANKSEL	r0x1002
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 01rr                      1-  247     	MOVR	r0x1002,W
     002B 242C                      1-  248     	XORIA	0x2c
     002C 0903                      1-  249     	BTRSS	STATUS,2
                                    1-  250     	MGOTO	_02140_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  251     	MGOTO	_02036_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
     002F                           1-  252     _02140_DS_:
                                    1-  253     	BANKSEL	r0x1002
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 01rr                      1-  254     	MOVR	r0x1002,W
     0031 2434                      1-  255     	XORIA	0x34
     0032 0903                      1-  256     	BTRSS	STATUS,2
                                    1-  257     	MGOTO	_02141_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  258     	MGOTO	_02035_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
     0035                           1-  259     _02141_DS_:
                                    1-  260     	BANKSEL	r0x1002
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 01rr                      1-  261     	MOVR	r0x1002,W
     0037 2438                      1-  262     	XORIA	0x38
     0038 0903                      1-  263     	BTRSS	STATUS,2
                                    1-  264     	MGOTO	_02038_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  265     	.line	94, "BSP\key.c"; 	case(0X38): KeyValue=0x01;break;
     003A 2101                      1-  266     	MOVIA	0x01
                                    1-  267     	BANKSEL	r0x1001
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1-  268     	MOVAR	r0x1001
                                    1-  269     	MGOTO	_02038_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
     003E                           1-  270     _02035_DS_:
                                    1-  271     	.line	95, "BSP\key.c"; 	case(0X34): KeyValue=0x02;break;
     003E 2102                      1-  272     	MOVIA	0x02
                                    1-  273     	BANKSEL	r0x1001
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1-  274     	MOVAR	r0x1001
                                    1-  275     	MGOTO	_02038_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
     0042                           1-  276     _02036_DS_:
                                    1-  277     	.line	96, "BSP\key.c"; 	case(0X2C): KeyValue=0x03;break;
     0042 2103                      1-  278     	MOVIA	0x03
                                    1-  279     	BANKSEL	r0x1001
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1-  280     	MOVAR	r0x1001
                                    1-  281     	MGOTO	_02038_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1-  282     _02037_DS_:
                                    1-  283     	.line	97, "BSP\key.c"; 	case(0X1C): KeyValue=0x04;break;
     0046 2104                      1-  284     	MOVIA	0x04
                                    1-  285     	BANKSEL	r0x1001
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1-  286     	MOVAR	r0x1001
     0049                           1-  287     _02038_DS_:
                                    1-  288     	.line	100, "BSP\key.c"; 	APHCON = 0b00111111; // 2、3、4上拉取消
     0049 213F                      1-  289     	MOVIA	0x3f
     004A 000r                      1-  290     	IOST	_APHCON
                                    1-  291     	.line	101, "BSP\key.c"; 	PCON = 0xe8; // 5上拉取消
     004B 21E8                      1-  292     	MOVIA	0xe8
     004C 00rr                      1-  293     	MOVAR	_PCON
                                    1-  294     	.line	102, "BSP\key.c"; 	IOSTA = 0b11000000; // 配置PA2、3、4、5为输出低电平
     004D 21C0                      1-  295     	MOVIA	0xc0
     004E 000r                      1-  296     	IOST	_IOSTA
                                    1-  297     	.line	103, "BSP\key.c"; 	set_PA_low();
                                    1-  298     	MCALL	_set_PA_low
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  299     	.line	105, "BSP\key.c"; 	IOSTB = 0b00001111; // 配置PB0、1、2、3为输入
     0050 210F                      1-  300     	MOVIA	0x0f
     0051 000r                      1-  301     	IOST	_IOSTB
                                    1-  302     	.line	106, "BSP\key.c"; 	BPHCON = 0xF0; // 0、1、2、3上拉
     0052 21F0                      1-  303     	MOVIA	0xf0
     0053 00rr                      1-  304     	MOVAR	_BPHCON
                                    1-  305     	.line	108, "BSP\key.c"; 	if(0b00000111 == (PORTB & 0x0f))
     0054 210F                      1-  306     	MOVIA	0x0f
     0055 10rr                      1-  307     	ANDAR	_PORTB,W
                                    1-  308     	BANKSEL	r0x1002
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 00rr                      1-  309     	MOVAR	r0x1002
     0058 01rr                      1-  310     	MOVR	r0x1002,W
     0059 2407                      1-  311     	XORIA	0x07
     005A 0903                      1-  312     	BTRSS	STATUS,2
                                    1-  313     	MGOTO	_02142_DS_
     005B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  314     	MGOTO	_02049_DS_
     005C 3rrr                      3-   62 m1      LGOTO rom_address
     005D                           1-  315     _02142_DS_:
                                    1-  316     	.line	112, "BSP\key.c"; 	else if(0b00001011 == (PORTB & 0x0f))
     005D 210F                      1-  317     	MOVIA	0x0f
     005E 10rr                      1-  318     	ANDAR	_PORTB,W
                                    1-  319     	BANKSEL	r0x1002
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1-  320     	MOVAR	r0x1002
     0061 01rr                      1-  321     	MOVR	r0x1002,W
     0062 240B                      1-  322     	XORIA	0x0b
     0063 0903                      1-  323     	BTRSS	STATUS,2
                                    1-  324     	MGOTO	_02045_DS_
     0064 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  325     	.line	114, "BSP\key.c"; 	KeyValue=KeyValue+0x04;
     0065 2104                      1-  326     	MOVIA	0x04
                                    1-  327     	BANKSEL	r0x1001
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 03rr                      1-  328     	ADDAR	r0x1001,F
                                    1-  329     	MGOTO	_02049_DS_
     0068 3rrr                      3-   62 m1      LGOTO rom_address
     0069                           1-  330     _02045_DS_:
                                    1-  331     	.line	116, "BSP\key.c"; 	else if(0b00001101 == (PORTB & 0x0f))
     0069 210F                      1-  332     	MOVIA	0x0f
     006A 10rr                      1-  333     	ANDAR	_PORTB,W
                                    1-  334     	BANKSEL	r0x1002
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1-  335     	MOVAR	r0x1002
     006D 01rr                      1-  336     	MOVR	r0x1002,W
     006E 240D                      1-  337     	XORIA	0x0d
     006F 0903                      1-  338     	BTRSS	STATUS,2
                                    1-  339     	MGOTO	_02042_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  340     	.line	118, "BSP\key.c"; 	KeyValue=KeyValue+0x08;
     0071 2108                      1-  341     	MOVIA	0x08
                                    1-  342     	BANKSEL	r0x1001
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 03rr                      1-  343     	ADDAR	r0x1001,F
                                    1-  344     	MGOTO	_02049_DS_
     0074 3rrr                      3-   62 m1      LGOTO rom_address
     0075                           1-  345     _02042_DS_:
                                    1-  346     	.line	120, "BSP\key.c"; 	else if(0b00001110 == (PORTB & 0x0f))
     0075 210F                      1-  347     	MOVIA	0x0f
     0076 10rr                      1-  348     	ANDAR	_PORTB,W
                                    1-  349     	BANKSEL	r0x1002
     0077 rrrr                      3-  109 m1      .banksel ram_address
     0078 00rr                      1-  350     	MOVAR	r0x1002
     0079 01rr                      1-  351     	MOVR	r0x1002,W
     007A 240E                      1-  352     	XORIA	0x0e
     007B 0903                      1-  353     	BTRSS	STATUS,2
                                    1-  354     	MGOTO	_02049_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  355     	.line	122, "BSP\key.c"; 	KeyValue=KeyValue+0x0c;
     007D 210C                      1-  356     	MOVIA	0x0c
                                    1-  357     	BANKSEL	r0x1001
     007E rrrr                      3-  109 m1      .banksel ram_address
     007F 03rr                      1-  358     	ADDAR	r0x1001,F
     0080                           1-  359     _02049_DS_:
                                    1-  360     	.line	125, "BSP\key.c"; 	key_init();
                                    1-  361     	MCALL	_key_init
     0080 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  362     	.line	127, "BSP\key.c"; 	sCodeValue = KeyValue - 0x01;
                                    1-  363     	BANKSEL	r0x1001
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 06rr                      1-  364     	DECR	r0x1001,F
                                    1-  365     	.line	129, "BSP\key.c"; 	KeyStatus = PORTA & 0xfc;
     0083 21FC                      1-  366     	MOVIA	0xfc
     0084 10rr                      1-  367     	ANDAR	_PORTA,W
                                    1-  368     	BANKSEL	r0x1002
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 00rr                      1-  369     	MOVAR	r0x1002
     0087                           1-  370     _02052_DS_:
                                    1-  371     	.line	130, "BSP\key.c"; 	while(0xfc != (PORTA & 0xfC))
     0087 21FC                      1-  372     	MOVIA	0xfc
     0088 10rr                      1-  373     	ANDAR	_PORTA,W
                                    1-  374     	BANKSEL	r0x1003
     0089 rrrr                      3-  109 m1      .banksel ram_address
     008A 00rr                      1-  375     	MOVAR	r0x1003
     008B 01rr                      1-  376     	MOVR	r0x1003,W
     008C 24FC                      1-  377     	XORIA	0xfc
     008D 0903                      1-  378     	BTRSS	STATUS,2
                                    1-  379     	MGOTO	_02143_DS_
     008E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  380     	MGOTO	_02054_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
     0090                           1-  381     _02143_DS_:
                                    1-  382     	.line	134, "BSP\key.c"; 	send_ble_packet(sCodeValue);
                                    1-  383     	BANKSEL	r0x1001
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 01rr                      1-  384     	MOVR	r0x1001,W
                                    1-  385     	MCALL	_send_ble_packet
     0092 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  386     	.line	136, "BSP\key.c"; 	led();
                                    1-  387     	MCALL	_led
     0093 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  388     	.line	138, "BSP\key.c"; 	key_init();
                                    1-  389     	MCALL	_key_init
     0094 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  390     	.line	139, "BSP\key.c"; 	if(KeyStatus != (PORTA & 0xfc))
     0095 21FC                      1-  391     	MOVIA	0xfc
     0096 10rr                      1-  392     	ANDAR	_PORTA,W
                                    1-  393     	BANKSEL	r0x1003
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 00rr                      1-  394     	MOVAR	r0x1003
     0099 01rr                      1-  395     	MOVR	r0x1003,W
                                    1-  396     	BANKSEL	r0x1002
     009A rrrr                      3-  109 m1      .banksel ram_address
     009B 12rr                      1-  397     	XORAR	r0x1002,W
     009C 0903                      1-  398     	BTRSS	STATUS,2
                                    1-  399     	MGOTO	_02144_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  400     	MGOTO	_02052_DS_
     009E 3rrr                      3-   62 m1      LGOTO rom_address
     009F                           1-  401     _02144_DS_:
                                    1-  402     	.line	140, "BSP\key.c"; 	return 0;
     009F 2100                      1-  403     	MOVIA	0x00
                                    1-  404     	MGOTO	_02060_DS_
     00A0 3rrr                      3-   62 m1      LGOTO rom_address
     00A1                           1-  405     _02054_DS_:
                                    1-  406     	.line	142, "BSP\key.c"; 	return 0;
     00A1 2100                      1-  407     	MOVIA	0x00
                                    1-  408     	MGOTO	_02060_DS_
     00A2 3rrr                      3-   62 m1      LGOTO rom_address
     00A3                           1-  409     _02056_DS_:
                                    1-  410     	.line	147, "BSP\key.c"; 	return 1;
     00A3 2101                      1-  411     	MOVIA	0x01
                                    1-  412     	MGOTO	_02060_DS_
     00A4 3rrr                      3-   62 m1      LGOTO rom_address
     00A5                           1-  413     _02059_DS_:
                                    1-  414     	.line	151, "BSP\key.c"; 	return 1;
     00A5 2101                      1-  415     	MOVIA	0x01
     00A6                           1-  416     _02060_DS_:
                                    1-  417     	.line	152, "BSP\key.c"; 	}
                                    1-  418     	RETURN	
     00A6 0010                      3-   39 m1      ret
                                    1-  419     ; exit point of _Check_Keydown
                                    1-  421     ;***
                                    1-  422     ;  pBlock Stats: dbName = C
                                    1-  423     ;***
                                    1-  424     ;has an exit
                                    1-  425     ;functions called:
                                    1-  426     ;   _led_open
                                    1-  427     ;   _delay_ms
                                    1-  428     ;   _led_open
                                    1-  429     ;   _delay_ms
                                    1-  430     ;   _led_open
                                    1-  431     ;   _delay_ms
                                    1-  432     ;   _led_open
                                    1-  433     ;   _delay_ms
                                    1-  434     ;; Starting pCode block
                                    1-  435     .segment "code"; module=key, function=_led
     0000                           1-  437     _led:
                                    1-  438     ; 2 exit points
                                    1-  439     	.line	52, "BSP\key.c"; 	led_open();
                                    1-  440     	MCALL	_led_open
     0000 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  441     	.line	53, "BSP\key.c"; 	PORTBbits.PB4 = 0;
     0001 1Err                      1-  442     	BCR	_PORTBbits,4
                                    1-  443     	.line	54, "BSP\key.c"; 	delay_ms(20);
     0002 2114                      1-  444     	MOVIA	0x14
                                    1-  445     	MCALL	_delay_ms
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  446     	.line	55, "BSP\key.c"; 	led_open();
                                    1-  447     	MCALL	_led_open
     0004 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  448     	.line	56, "BSP\key.c"; 	PORTBbits.PB4 = 0;
     0005 1Err                      1-  449     	BCR	_PORTBbits,4
                                    1-  450     	.line	57, "BSP\key.c"; 	delay_ms(20);
     0006 2114                      1-  451     	MOVIA	0x14
                                    1-  452     	MCALL	_delay_ms
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  453     	.line	58, "BSP\key.c"; 	}
                                    1-  454     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1-  455     ; exit point of _led
                                    1-  457     ;***
                                    1-  458     ;  pBlock Stats: dbName = C
                                    1-  459     ;***
                                    1-  460     ;has an exit
                                    1-  461     ;functions called:
                                    1-  462     ;   _delay_us
                                    1-  463     ;   _delay_us
                                    1-  464     ;   _delay_us
                                    1-  465     ;   _delay_us
                                    1-  466     ;1 compiler assigned register :
                                    1-  467     ;   r0x1000
                                    1-  468     ;; Starting pCode block
                                    1-  469     .segment "code"; module=key, function=_led_open
                                    1-  471     ;local variable name mapping:
     0000                           1-  473     _led_open:
                                    1-  474     ; 2 exit points
                                    1-  475     	.line	41, "BSP\key.c"; 	for(unsigned char i = 0; i < 200; i++)
                                    1-  476     	BANKSEL	r0x1000
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1-  477     	CLRR	r0x1000
                                    1-  478     ;;unsigned compare: left < lit(0xC8=200), size=1
     0002                           1-  479     _02019_DS_:
     0002 21C8                      1-  480     	MOVIA	0xc8
                                    1-  481     	BANKSEL	r0x1000
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 04rr                      1-  482     	SUBAR	r0x1000,W
     0005 0C03                      1-  483     	BTRSC	STATUS,0
                                    1-  484     	MGOTO	_02021_DS_
     0006 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  485     	.line	43, "BSP\key.c"; 	PORTBbits.PB4 = 1;
     0007 1Arr                      1-  486     	BSR	_PORTBbits,4
                                    1-  487     	.line	44, "BSP\key.c"; 	delay_us(5);
     0008 2105                      1-  488     	MOVIA	0x05
                                    1-  489     	MCALL	_delay_us
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  490     	.line	45, "BSP\key.c"; 	PORTBbits.PB4 = 0;
     000A 1Err                      1-  491     	BCR	_PORTBbits,4
                                    1-  492     	.line	46, "BSP\key.c"; 	delay_us(15);
     000B 210F                      1-  493     	MOVIA	0x0f
                                    1-  494     	MCALL	_delay_us
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  495     	.line	41, "BSP\key.c"; 	for(unsigned char i = 0; i < 200; i++)
                                    1-  496     	BANKSEL	r0x1000
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 05rr                      1-  497     	INCR	r0x1000,F
                                    1-  498     	MGOTO	_02019_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1-  499     _02021_DS_:
                                    1-  500     	.line	48, "BSP\key.c"; 	}
                                    1-  501     	RETURN	
     0010 0010                      3-   39 m1      ret
                                    1-  502     ; exit point of _led_open
                                    1-  504     ;***
                                    1-  505     ;  pBlock Stats: dbName = C
                                    1-  506     ;***
                                    1-  507     ;has an exit
                                    1-  508     ;functions called:
                                    1-  509     ;   _delay_us
                                    1-  510     ;   _set_PB_low
                                    1-  511     ;   _delay_us
                                    1-  512     ;   _set_PB_low
                                    1-  513     ;; Starting pCode block
                                    1-  514     .segment "code"; module=key, function=_key_init
     0000                           1-  516     _key_init:
                                    1-  517     ; 2 exit points
                                    1-  518     	.line	24, "BSP\key.c"; 	delay_us(100);
     0000 2164                      1-  519     	MOVIA	0x64
                                    1-  520     	MCALL	_delay_us
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  521     	.line	26, "BSP\key.c"; 	IOSTA = C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input | C_PA6_Input | C_PA7_Input;  // 配置PA2、3、4、5、6、7为输入
     0002 21FC                      1-  522     	MOVIA	0xfc
     0003 000r                      1-  523     	IOST	_IOSTA
                                    1-  524     	.line	29, "BSP\key.c"; 	APHCON = 0b00100011; // 设置2、3、4、6、7上拉
     0004 2123                      1-  525     	MOVIA	0x23
     0005 000r                      1-  526     	IOST	_APHCON
                                    1-  527     	.line	31, "BSP\key.c"; 	PCON = 0xc8; // 设置5上拉
     0006 21C8                      1-  528     	MOVIA	0xc8
     0007 00rr                      1-  529     	MOVAR	_PCON
                                    1-  530     	.line	34, "BSP\key.c"; 	IOSTB = C_PB0_Output | C_PB1_Output | C_PB2_Output | C_PB3_Output | C_PB4_Output; // 配置PB为输出低电平
     0008 0200                      1-  531     	CLRA	
     0009 000r                      1-  532     	IOST	_IOSTB
                                    1-  533     	.line	35, "BSP\key.c"; 	set_PB_low();
                                    1-  534     	MCALL	_set_PB_low
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  535     	.line	36, "BSP\key.c"; 	PORTBbits.PB4 = 0;
     000B 1Err                      1-  536     	BCR	_PORTBbits,4
                                    1-  537     	.line	37, "BSP\key.c"; 	}
                                    1-  538     	RETURN	
     000C 0010                      3-   39 m1      ret
                                    1-  539     ; exit point of _key_init
                                    1-  541     ;***
                                    1-  542     ;  pBlock Stats: dbName = C
                                    1-  543     ;***
                                    1-  544     ;has an exit
                                    1-  545     ;; Starting pCode block
                                    1-  546     .segment "code"; module=key, function=_set_PB_low
     0000                           1-  548     _set_PB_low:
                                    1-  549     ; 2 exit points
                                    1-  550     	.line	16, "BSP\key.c"; 	PORTBbits.PB0 = 0;
     0000 1Crr                      1-  551     	BCR	_PORTBbits,0
                                    1-  552     	.line	17, "BSP\key.c"; 	PORTBbits.PB1 = 0;
     0001 1Crr                      1-  553     	BCR	_PORTBbits,1
                                    1-  554     	.line	18, "BSP\key.c"; 	PORTBbits.PB2 = 0;
     0002 1Drr                      1-  555     	BCR	_PORTBbits,2
                                    1-  556     	.line	19, "BSP\key.c"; 	PORTBbits.PB3 = 0;
     0003 1Drr                      1-  557     	BCR	_PORTBbits,3
                                    1-  558     	.line	20, "BSP\key.c"; 	}
                                    1-  559     	RETURN	
     0004 0010                      3-   39 m1      ret
                                    1-  560     ; exit point of _set_PB_low
                                    1-  562     ;***
                                    1-  563     ;  pBlock Stats: dbName = C
                                    1-  564     ;***
                                    1-  565     ;has an exit
                                    1-  566     ;; Starting pCode block
                                    1-  567     .segment "code"; module=key, function=_set_PA_low
     0000                           1-  569     _set_PA_low:
                                    1-  570     ; 2 exit points
                                    1-  571     	.line	9, "BSP\key.c"; 	PORTAbits.PA2 = 0;
     0000 1Drr                      1-  572     	BCR	_PORTAbits,2
                                    1-  573     	.line	10, "BSP\key.c"; 	PORTAbits.PA3 = 0;
     0001 1Drr                      1-  574     	BCR	_PORTAbits,3
                                    1-  575     	.line	11, "BSP\key.c"; 	PORTAbits.PA4 = 0;
     0002 1Err                      1-  576     	BCR	_PORTAbits,4
                                    1-  577     	.line	12, "BSP\key.c"; 	PORTAbits.PA5 = 0;
     0003 1Err                      1-  578     	BCR	_PORTAbits,5
                                    1-  579     	.line	13, "BSP\key.c"; 	}
                                    1-  580     	RETURN	
     0004 0010                      3-   39 m1      ret
                                    1-  581     ; exit point of _set_PA_low
                                    1-  584     ;	code size estimation:
                                    1-  585     ;	  187+   29 =   216 instructions (  490 byte)
                                    1-  587     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\key.s
002 ny8a054e.inc
003 common.inc
004 BSP\key.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
